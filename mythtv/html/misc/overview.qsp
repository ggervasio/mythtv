<html>
<head>
<title>MythTV System Overview</title>
</head>
<body>

    <div style="margin: 0 auto; width:660px;" class="pressed">
        <h2>Last Ten Recordings</h2>
    </div>

    <div style="margin: 0 auto;" id="lasttencontainer">
        <div style="padding: 10px 0px;" id="lasttencontent">
<%
            var oDvr = new Dvr();
            var list = oDvr.GetRecorded( true, 0, 10 );
            for (var nIdx=0; nIdx < list.Programs.length; nIdx++)
            {
                var program = list.Programs[ nIdx ];
                var title = '';
                if (program.SubTitle == '')
                    title = program.Title;
                else
                    title = program.Title + " (" + program.SubTitle + ")";
%>
                <img title="<%= title %>" alt="<%= program.Description %>" src="/Content/GetPreviewImage?ChanId=<%=program.Channel.ChanId %>&Height=300&StartTime=<%=ISODateString( program.Recording.StartTs ) %>"/>
<%
            } 
%>
        </div>
    <div>

    <div style="margin: 0 auto; width:660px;" class="pressed">
        <h2>Current Tuner Activity</h2>
    </div>

    <div style="padding: 10px 0px;" id="encodercontainer">
        <div class="blackbox galleria-container indented" style="width:680px; padding: 0px 10px 0px 10px;" id="encodercontent">
        <ul>
<%
            var oDvr = new Dvr();
            var encoderlist = oDvr.Encoders();
            for (var nIdx=0; nIdx < encoderlist.Encoders.length; nIdx++)
            {
                var encoder = encoderlist.Encoders[ nIdx ];
                var statestring = '';
                var state = encoder.State;
                switch(state)
                {
                    case 1:
                        var recording = encoder.Recording;
                        statestring = 'is currently watching \"' + recording.Title + '\" on Live TV.';
                        break;
                    case 6:
                        var recording = encoder.Recording;
                        statestring = 'is currently recording \"' + recording.Title + '.\"  This program is being viewed.';
                        break;
                    case 7:
                        var recording = encoder.Recording;
                        var endtime = recording.EndTime.getHours() + ':' + recording.EndTime.getMinutes();
                        statestring = 'is currently recording \"' + recording.Title + '.\"  This recording will end at ' + endtime + '.';
                        break;
                    default:
                        statestring = 'is currently idle.';
                        break;
                }
%>
                <li>Encoder <%= encoder.Id + " " + statestring %></li>
<%
            }
%>

        </ul>
        </div>
    <div>

</body>
</html>

<%
function ISODateString(d)
{
  function pad(n)
  {
    return n<10 ? '0'+n : n
  }
  return d.getFullYear()+'-'
   + pad(d.getMonth()+1)+'-'
   + pad(d.getDate())+'T'
   + pad(d.getHours())+':'
   + pad(d.getMinutes())+':'
   + pad(d.getSeconds())
}
%>

<script src="/js/galleria/galleria-1.2.3.min.js"></script>

<script type="text/javascript">
    $(document).ready(function($){
        Galleria.loadTheme('/js/galleria/themes/classic/galleria.classic.min.js');
        $("#lasttencontent").galleria({
            width: 700,
            height: 350,
            autoplay: 7000,
            imageCrop: true,
            showInfo: true
        });
    });
</script>
